[{"name":"app.r","content":"library(shiny)\n\n# UI Definition\nui <- fluidPage(\n  tags$head(\n    tags$style(HTML(\"\n      .completed { \n        background-color: #0077bb !important; \n        color: #ffffff !important;\n        border: 3px solid #004477 !important;\n        font-weight: bold !important;\n      }\n      .unlocked { \n        background-color: #ee7733 !important; \n        color: #000000 !important;\n        border: 3px solid #cc5511 !important;\n        font-weight: bold !important;\n      }\n      .locked { \n        background-color: #cccccc !important; \n        color: #666666 !important;\n        border: 3px solid #999999 !important;\n      }\n      .room-btn { margin-bottom: 10px; }\n      .game-container { max-width: 1200px; margin: 0 auto; }\n      .story-box {\n        background-color: #f0f4f8;\n        border-left: 5px solid #0077bb;\n        padding: 15px;\n        margin: 15px 0;\n        font-style: italic;\n      }\n      .email-box {\n        background-color: #ffffff;\n        border: 2px solid #ccc;\n        padding: 15px;\n        margin: 15px 0;\n        font-family: 'Courier New', monospace;\n        font-size: 14px;\n      }\n      .email-header {\n        border-bottom: 1px solid #ccc;\n        padding-bottom: 10px;\n        margin-bottom: 10px;\n      }\n    \"))\n  ),\n  \n  div(class = \"game-container\",\n      titlePanel(\"🔬 Open Science Escape Room\"),\n      \n      # Progress tracker at top\n      fluidRow(\n        column(12,\n               wellPanel(\n                 uiOutput(\"progress_display\"),\n                 uiOutput(\"timer_display\")\n               )\n        )\n      ),\n      \n      # Main game area\n      fluidRow(\n        column(3,\n               wellPanel(\n                 h4(\"🚪 Challenges\"),\n                 uiOutput(\"room_selector\")\n               )\n        ),\n        column(9,\n               wellPanel(\n                 uiOutput(\"puzzle_area\")\n               )\n        )\n      ),\n      \n      # Footer\n      fluidRow(\n        column(12,\n               hr(),\n               p(style = \"text-align: center; color: #6c757d;\",\n                 HTML('Open Science Escape Room | Built with Shiny + shinylive | <a href=\"https://tvpollet.github.io/disclaimer/\" target=\"_blank\">Disclaimer<\/a>')\n               )\n        )\n      )\n  )\n)\n\n# Server Logic\nserver <- function(input, output, session) {\n  \n  # Game state - tracks completion and unlocks\n  game_state <- reactiveValues(\n    start_time = as.numeric(Sys.time()),\n    time_limit = 15 * 60, # 15 minutes in seconds\n    current_room = \"lobby\",\n    hints_used = 0,\n    lives = 3,\n    game_over = FALSE,\n    puzzles = list(\n      preregistration = list(unlocked = TRUE, completed = FALSE, name = \"Challenge 1: Preregistration\"),\n      p_hacking = list(unlocked = FALSE, completed = FALSE, name = \"Challenge 2: QRPs\"),\n      power_analysis = list(unlocked = FALSE, completed = FALSE, name = \"Challenge 3: Power Analysis\"),\n      open_data = list(unlocked = FALSE, completed = FALSE, name = \"Challenge 4: FAIR Data\"),\n      fraudster_hall = list(unlocked = FALSE, completed = FALSE, name = \"Challenge 5: Hall of Fame\"),\n      final_challenge = list(unlocked = FALSE, completed = FALSE, name = \"Final Challenge\")\n    )\n  )\n  \n  # Auto-refresh timer every second\n  timer <- reactiveTimer(1000)\n  \n  # Unlock logic - sequential progression\n  observeEvent(game_state$puzzles$preregistration$completed, {\n    game_state$puzzles$p_hacking$unlocked <- TRUE\n  })\n  \n  observeEvent(game_state$puzzles$p_hacking$completed, {\n    game_state$puzzles$power_analysis$unlocked <- TRUE\n  })\n  \n  observeEvent(game_state$puzzles$power_analysis$completed, {\n    game_state$puzzles$open_data$unlocked <- TRUE\n  })\n  \n  observeEvent(game_state$puzzles$open_data$completed, {\n    game_state$puzzles$fraudster_hall$unlocked <- TRUE\n  })\n  \n  observeEvent(game_state$puzzles$fraudster_hall$completed, {\n    # Only unlock final challenge when ALL other puzzles are completed\n    if (game_state$puzzles$preregistration$completed &&\n        game_state$puzzles$p_hacking$completed &&\n        game_state$puzzles$power_analysis$completed &&\n        game_state$puzzles$open_data$completed &&\n        game_state$puzzles$fraudster_hall$completed) {\n      game_state$puzzles$final_challenge$unlocked <- TRUE\n    }\n  })\n  \n  # Progress display\n  output$progress_display <- renderUI({\n    completed <- sum(sapply(game_state$puzzles, function(x) x$completed))\n    total <- length(game_state$puzzles)\n    \n    div(\n      h4(sprintf(\"Progress: %d/%d challenges completed | 💡 Hints: %d/3 used\", completed, total, game_state$hints_used)),\n      HTML(paste(rep(\"✅\", completed), rep(\"🔒\", total - completed), collapse = \" \")),\n      p(style = \"margin-top: 10px; font-size: 18px;\",\n        sprintf(\"❤️ Lives remaining: %s\", paste(rep(\"❤️\", game_state$lives), collapse = \" \")))\n    )\n  })\n  \n  # Timer display\n  output$timer_display <- renderUI({\n    timer()  # Trigger reactive update\n    elapsed <- as.numeric(Sys.time()) - game_state$start_time\n    remaining <- game_state$time_limit - elapsed\n    \n    if (remaining <= 0 && !all(sapply(game_state$puzzles, function(x) x$completed))) {\n      # Time's up and not all completed\n      game_state$game_over <- TRUE\n      game_state$current_room <- \"lobby\"\n      time_text <- \"⏰ TIME'S UP!\"\n      time_color <- \"red\"\n    } else if (remaining <= 120) {\n      # Less than 2 minutes - urgent\n      mins <- floor(remaining / 60)\n      secs <- floor(remaining %% 60)\n      time_text <- sprintf(\"⏰ Time remaining: %d:%02d (HURRY!)\", mins, secs)\n      time_color <- \"red\"\n    } else if (remaining <= 300) {\n      # Less than 5 minutes - warning\n      mins <- floor(remaining / 60)\n      secs <- floor(remaining %% 60)\n      time_text <- sprintf(\"⏰ Time remaining: %d:%02d\", mins, secs)\n      time_color <- \"orange\"\n    } else {\n      # Plenty of time\n      mins <- floor(remaining / 60)\n      secs <- floor(remaining %% 60)\n      time_text <- sprintf(\"⏰ Time remaining: %d:%02d\", mins, secs)\n      time_color <- \"black\"\n    }\n    \n    p(style = sprintf(\"color: %s; font-weight: bold;\", time_color), time_text)\n  })\n  \n  # Room selector buttons\n  output$room_selector <- renderUI({\n    # Build list of visible rooms - only those that are unlocked OR completed\n    buttons <- list()\n    \n    for (room_name in names(game_state$puzzles)) {\n      puzzle <- game_state$puzzles[[room_name]]\n      \n      # Only show this room if it's unlocked OR completed\n      if (puzzle$unlocked || puzzle$completed) {\n        if (puzzle$completed) {\n          btn_class <- \"btn-success room-btn completed\"\n          icon_status <- \"✅\"\n        } else if (puzzle$unlocked) {\n          btn_class <- \"btn-warning room-btn unlocked\"\n          icon_status <- \"🔓\"\n        } else {\n          btn_class <- \"btn-secondary room-btn locked\"\n          icon_status <- \"🔒\"\n        }\n        \n        buttons[[length(buttons) + 1]] <- actionButton(\n          inputId = paste0(\"room_\", room_name),\n          label = paste(icon_status, puzzle$name),\n          width = \"100%\",\n          class = btn_class\n        )\n      }\n    }\n    \n    # Add reset button\n    buttons[[length(buttons) + 1]] <- hr()\n    buttons[[length(buttons) + 1]] <- actionButton(\"reset_game_btn\", \"🔄 Start Over\", \n                                                   width = \"100%\", class = \"btn-danger\")\n    \n    do.call(tagList, buttons)\n  })\n  \n  # Room button observers\n  observe({\n    lapply(names(game_state$puzzles), function(room) {\n      observeEvent(input[[paste0(\"room_\", room)]], {\n        if (game_state$puzzles[[room]]$unlocked) {\n          game_state$current_room <- room\n        }\n      })\n    })\n  })\n  \n  # Main puzzle area\n  output$puzzle_area <- renderUI({\n    # Check for time up\n    elapsed <- as.numeric(Sys.time()) - game_state$start_time\n    remaining <- game_state$time_limit - elapsed\n    \n    if (remaining <= 0 && !all(sapply(game_state$puzzles, function(x) x$completed))) {\n      game_state$game_over <- TRUE\n      return(div(\n        h2(\"⏰ Time's Up!\"),\n        \n        div(class = \"email-box\",\n            div(class = \"email-header\",\n                strong(\"From:\"), \" Prof. Brian Stapel\", br(),\n                strong(\"To:\"), \" You\", br(),\n                strong(\"Subject:\"), \" RE: Ethics Application - OUT OF TIME\", br(),\n                strong(\"Time:\"), \" 2:00 PM (15 minutes expired)\"\n            ),\n            p(\"Dear Student,\"),\n            p(\"I'm afraid our meeting time has arrived and you haven't completed all the challenges yet.\"),\n            p(\"Your ethics application cannot be approved without demonstrating competency in all six areas of open science practice. We'll need to reschedule, which will delay your data collection timeline.\"),\n            p(\"Take some time to review the material and try again when you're better prepared. Remember: speed matters, but accuracy matters more.\"),\n            p(\"Best,\", br(), \"Prof. Stapel\")\n        ),\n        \n        hr(),\n        actionButton(\"reset_game_after_loss\", \"🔄 Try Again\", class = \"btn-primary btn-lg\")\n      ))\n    }\n    \n    # Check for game over (lives)\n    if (game_state$game_over) {\n      return(div(\n        h2(\"💀 Ethics Application Rejected\"),\n        \n        div(class = \"email-box\",\n            div(class = \"email-header\",\n                strong(\"From:\"), \" Prof. Brian Stapel\", br(),\n                strong(\"To:\"), \" You\", br(),\n                strong(\"Subject:\"), \" RE: Ethics Application - NEEDS REVISION\", br(),\n                strong(\"Time:\"), \" 2:00 PM\"\n            ),\n            p(\"Dear Student,\"),\n            p(\"I'm afraid we've run out of time. You've used all three attempts and haven't completed all the necessary challenges.\"),\n            p(\"Your ethics application cannot be approved without demonstrating competency in all six areas of open science practice. This isn't just bureaucracy - these are essential skills for conducting ethical, reproducible research.\"),\n            p(\"The good news: You can retake these challenges. Many students need multiple attempts to fully grasp these concepts. Take some time to review the BPS Code of Human Research Ethics and the material from your Research Methods module.\"),\n            p(\"When you're ready, come back and try again. Your dissertation timeline will be delayed, but it's better to get this right than to rush and make mistakes.\"),\n            p(\"Best,\", br(), \"Prof. Stapel\")\n        ),\n        \n        div(class = \"story-box\",\n            p(strong(\"Remember:\"), \" In real research, there are no 'lives' or second chances once you've collected data with questionable practices. That's why we get it right from the start!\")\n        ),\n        \n        hr(),\n        actionButton(\"reset_game_after_loss\", \"🔄 Try Again (Restart Challenges)\", class = \"btn-primary btn-lg\")\n      ))\n    }\n    \n    switch(game_state$current_room,\n           \"preregistration\" = preregistration_ui(),\n           \"p_hacking\" = p_hacking_ui(),\n           \"power_analysis\" = power_analysis_ui(),\n           \"open_data\" = open_data_ui(),\n           \"fraudster_hall\" = fraudster_hall_ui(),\n           \"final_challenge\" = final_challenge_ui(),\n           # Default lobby\n           div(\n             h2(\"🎓 The Dissertation Dilemma\"),\n             \n             div(class = \"email-box\",\n                 div(class = \"email-header\",\n                     strong(\"From:\"), \" Prof. Brian Stapel (Dissertation Supervisor)\", br(),\n                     strong(\"To:\"), \" You (Final Year Psychology Student)\", br(),\n                     strong(\"Subject:\"), \" URGENT: Your Dissertation Project\", br(),\n                     strong(\"Date:\"), \" Today, 9:00 AM\"\n                 ),\n                 p(\"Dear Student,\"),\n                 p(\"I've just reviewed your dissertation proposal for your final year project, and I'm afraid we have a serious problem.\"),\n                 p(\"Your literature review is excellent, and your research question is solid. However, your proposed methodology doesn't meet the open science standards required by our department and the Belgian Psychological Society. Without demonstrating proper understanding of these principles, I cannot approve your ethics application, and you won't be able to collect data.\"),\n                 p(\"I've prepared six challenges that cover the essential open science practices you'll need for your project. \", strong(\"You have exactly 15 minutes to complete them all\"), \" before our 2 PM meeting, or we'll need to significantly delay your data collection - which would put your graduation timeline at risk.\"),\n                 p(\"I know this seems daunting, but these are skills every psychology researcher needs. Consider this your crash course in responsible research practices. You have three attempts at each challenge (think of them as 'lives'), so use them wisely.\"),\n                 p(\"The first challenge is ready for you now. Once you complete it, the next will unlock.\"),\n                 p(\"Good luck! I believe in you, but the clock is ticking...\"),\n                 p(\"Best,\", br(), \"Prof. Stapel\")\n             ),\n             \n             div(class = \"story-box\",\n                 p(strong(\"Your situation:\"), \" It's 9:00 AM. You have \", strong(\"15 minutes\"), \" to prove you understand open science principles well enough to conduct ethical, reproducible research for your dissertation. Your degree depends on it.\")\n             ),\n             \n             hr(),\n             h4(\"⏰ The Challenge:\"),\n             tags$ul(\n               tags$li(\"Complete six open science challenges in 15 minutes\"),\n               tags$li(\"Each covers a critical aspect of your dissertation research\"),\n               tags$li(\"You have 3 attempts (lives) - use them carefully!\"),\n               tags$li(\"You can use up to 3 hints across all challenges\"),\n               tags$li(\"New challenges unlock as you progress\"),\n               tags$li(\"Complete all challenges before time runs out to approve your ethics application\")\n             ),\n             hr(),\n             p(strong(\"Ready to save your dissertation? Click on the first challenge to begin! The timer starts NOW! ⏰\"))\n           )\n    )\n  })\n  \n  # PUZZLE 1: Preregistration\n  preregistration_ui <- function() {\n    tagList(\n      h3(\"📋 Challenge 1: Preregistration Requirements\"),\n      \n      div(class = \"story-box\",\n          p(strong(\"Prof. Stapel's note:\"), \" \\\"Before you collect any data, you need to preregister your study. This prevents questionable research practices and shows you're committed to transparency. Different types of research require different registration platforms - let's see if you know which is which.\\\"\")\n      ),\n      \n      p(\"Your dissertation involves reviewing different types of psychological research. Match each scenario to the appropriate preregistration platform:\"),\n      hr(),\n      fluidRow(\n        column(6,\n               h4(\"Research Scenarios:\"),\n               div(style = \"padding: 10px; margin: 5px; background-color: #e9ecef; border-radius: 5px;\",\n                   strong(\"Scenario 1:\"), \" A clinical trial testing a new CBT intervention for anxiety in adolescents\"\n               ),\n               div(style = \"padding: 10px; margin: 5px; background-color: #e9ecef; border-radius: 5px;\",\n                   strong(\"Scenario 2:\"), \" Exploratory analysis of the UK Household Longitudinal Study (Understanding Society) data\"\n               ),\n               div(style = \"padding: 10px; margin: 5px; background-color: #e9ecef; border-radius: 5px;\",\n                   strong(\"Scenario 3:\"), \" A direct replication of Dweck's mindset intervention study\"\n               ),\n               div(style = \"padding: 10px; margin: 5px; background-color: #e9ecef; border-radius: 5px;\",\n                   strong(\"Scenario 4:\"), \" Your dissertation: A confirmatory study testing whether social media use predicts wellbeing in university students\"\n               ),\n               div(style = \"padding: 10px; margin: 5px; background-color: #e9ecef; border-radius: 5px;\",\n                   strong(\"Scenario 5:\"), \" A systematic review and meta-analysis on mindfulness interventions for depression\"\n               )\n        ),\n        column(6,\n               h4(\"Your Answers:\"),\n               selectInput(\"match1\", \"Scenario 1 matches with:\", \n                           choices = c(\"Choose...\" = \"\", \"AsPredicted\", \"ClinicalTrials.gov\", \"Secondary Data Preregistration\", \"Replication Recipe\", \"PROSPERO\")),\n               selectInput(\"match2\", \"Scenario 2 matches with:\", \n                           choices = c(\"Choose...\" = \"\", \"AsPredicted\", \"ClinicalTrials.gov\", \"Secondary Data Preregistration\", \"Replication Recipe\", \"PROSPERO\")),\n               selectInput(\"match3\", \"Scenario 3 matches with:\", \n                           choices = c(\"Choose...\" = \"\", \"AsPredicted\", \"ClinicalTrials.gov\", \"Secondary Data Preregistration\", \"Replication Recipe\", \"PROSPERO\")),\n               selectInput(\"match4\", \"Scenario 4 matches with:\", \n                           choices = c(\"Choose...\" = \"\", \"AsPredicted\", \"ClinicalTrials.gov\", \"Secondary Data Preregistration\", \"Replication Recipe\", \"PROSPERO\")),\n               selectInput(\"match5\", \"Scenario 5 matches with:\", \n                           choices = c(\"Choose...\" = \"\", \"AsPredicted\", \"ClinicalTrials.gov\", \"Secondary Data Preregistration\", \"Replication Recipe\", \"PROSPERO\"))\n        )\n      ),\n      hr(),\n      actionButton(\"check_prereg\", \"✅ Submit Answers\", class = \"btn-primary btn-lg\"),\n      actionButton(\"hint_prereg\", \"💡 Request Hint\", class = \"btn-info\"),\n      br(), br(),\n      uiOutput(\"prereg_feedback\")\n    )\n  }\n  \n  observeEvent(input$check_prereg, {\n    correct <- c(\"ClinicalTrials.gov\", \"Secondary Data Preregistration\", \"Replication Recipe\", \"AsPredicted\", \"PROSPERO\")\n    answers <- c(input$match1, input$match2, input$match3, input$match4, input$match5)\n    \n    if (all(answers == correct)) {\n      game_state$puzzles$preregistration$completed <- TRUE\n      \n      output$prereg_feedback <- renderUI({\n        div(class = \"alert alert-success\",\n            h4(\"✅ Excellent work!\"),\n            p(\"Clinical trials → ClinicalTrials.gov, secondary data analysis → Secondary Data Preregistration, replication studies → \", \n              HTML('<a href=\"https://doi.org/10.1016/j.jesp.2013.10.005\" target=\"_blank\">Replication Recipe<\/a>'),\n              \", confirmatory studies → AsPredicted, and systematic reviews → PROSPERO.\"),\n            div(class = \"story-box\",\n                p(strong(\"Prof. Stapel:\"), \" \\\"Well done! You've got the basics of preregistration. For your own dissertation, you'll be using a pre-registration template such as AsPredicted since you have clear hypotheses to test. This will protect you from accusations of HARKing and p-hacking. Next challenge unlocked...\\\"\")\n            )\n        )\n      })\n    } else {\n      # Lose a life\n      game_state$lives <- game_state$lives - 1\n      \n      if (game_state$lives <= 0) {\n        game_state$game_over <- TRUE\n        game_state$current_room <- \"lobby\"\n      } else {\n        num_correct <- sum(answers == correct)\n        output$prereg_feedback <- renderUI({\n          div(class = \"alert alert-danger\",\n              h4(sprintf(\"❌ Wrong! You lost a life. %d lives remaining.\", game_state$lives)),\n              p(sprintf(\"You got %d out of 5 correct. Think about which platform is specifically designed for each type of study.\", num_correct))\n          )\n        })\n      }\n    }\n  })\n  \n  observeEvent(input$hint_prereg, {\n    if (game_state$hints_used < 3) {\n      game_state$hints_used <- game_state$hints_used + 1\n      showModal(modalDialog(\n        title = \"💡 Hint\",\n        \"ClinicalTrials.gov is for clinical trials. PROSPERO is for systematic reviews. Secondary Data Preregistration is for analyzing existing datasets. Replication Recipe is specifically for replication studies. AsPredicted is for confirmatory hypotheses in new studies.\",\n        easyClose = TRUE,\n        footer = modalButton(\"Close\")\n      ))\n    } else {\n      showModal(modalDialog(\n        title = \"No Hints Left\",\n        \"You've used all 3 hints! Keep trying!\",\n        easyClose = TRUE,\n        footer = modalButton(\"Close\")\n      ))\n    }\n  })\n\n  # PUZZLE 2: P-Hacking - NOW WITH 8 OPTIONS (3 legitimate + 5 QRPs)\n  p_hacking_ui <- function() {\n    tagList(\n      h3(\"🔍 Challenge 2: Spotting Questionable Research Practices\"),\n      \n      div(class = \"story-box\",\n          p(strong(\"Prof. Stapel's note:\"), \" \\\"Now you need to understand WHY preregistration matters. I'm showing you an analysis log from a student's dissertation. Your task: identify ONLY the questionable research practices. Not all decisions in research are problematic - distinguish between legitimate choices and QRPs.\\\"\")\n      ),\n      \n      p(\"Analyse this log carefully. Select \", strong(\"ONLY\"), \" the questionable research practices (QRPs):\"),\n      hr(),\n      wellPanel(\n        h4(\"Analysis Log - Social Media and Wellbeing Study\"),\n        p(em(\"(From a previous student - submitted but rejected)\")),\n        tags$pre(style = \"background-color: #f8f9fa; padding: 15px;\",\n                 \"Step 1: Pre-registered study on OSF. Specified N=100, primary DV: life \n      satisfaction, secondary DV: depression. Outlier criteria: >3 SD.\n\nStep 2: Collected n=50, ran t-test on life satisfaction. p=.08\n      Not significant... let's keep collecting until significant.\n\nStep 3: Added 20 more participants. Now p=.045! Significant! ✓\n      Stopped data collection early at n=70.\n\nStep 4: Ran pre-registered secondary analysis on depression scores.\n      Depression: p=.03. Good!\n\nStep 5: Checked for outliers using pre-specified >3 SD criteria.\n      Found 2 outliers but p still .03. Changed criterion to >2.5 SD,\n      removed 5 outliers. Now p=.008! Much better.\n\nStep 6: Added age as covariate (NOT pre-registered). Now p=.002!\n      Much better results.\n\nStep 7: Writing up - focusing on depression as 'primary outcome' since\n      it showed strongest effect. Life satisfaction now secondary.\"\n        )\n      ),\n      checkboxGroupInput(\"qrp_identified\",\n                         \"Select ONLY the questionable research practices (NOT legitimate practices):\",\n                         choices = c(\n                           \"Pre-registering the study on OSF\" = \"prereg\",\n                           \"Optional stopping (collecting until significance, then stopping early)\" = \"optional_stop\",\n                           \"Running the pre-registered secondary analysis on depression\" = \"secondary\",\n                           \"Selective reporting (switching primary and secondary outcomes)\" = \"selective_dv\",\n                           \"Having pre-specified outlier removal criteria (>3 SD)\" = \"outlier_criteria\",\n                           \"Changing outlier criterion post-hoc to get significant results (3 SD to 2.5 SD)\" = \"outlier\",\n                           \"Adding a non-preregistered covariate\" = \"covariates\",\n                           \"HARKing (presenting secondary outcome as primary)\" = \"harking\"\n                         )\n      ),\n      hr(),\n      actionButton(\"check_phack\", \"✅ Submit Analysis\", class = \"btn-primary btn-lg\"),\n      actionButton(\"hint_phack\", \"💡 Request Hint\", class = \"btn-info\"),\n      br(), br(),\n      uiOutput(\"phack_feedback\")\n    )\n  }\n  \n  observeEvent(input$check_phack, {\n    correct_qrps <- c(\"optional_stop\", \"selective_dv\", \"outlier\", \"covariates\", \"harking\")\n    identified <- input$qrp_identified\n    \n    all_correct <- length(setdiff(correct_qrps, identified)) == 0 && \n      length(setdiff(identified, correct_qrps)) == 0\n    \n    if (all_correct) {\n      game_state$puzzles$p_hacking$completed <- TRUE\n      \n      output$phack_feedback <- renderUI({\n        div(class = \"alert alert-success\",\n            h4(\"✅ Excellent detective work!\"),\n            p(\"You correctly identified the 5 QRPs:\"),\n            tags$ol(\n              tags$li(strong(\"Optional stopping\"), \" - stopping based on results, not pre-specified N\"),\n              tags$li(strong(\"Selective reporting\"), \" - switching primary/secondary outcomes\"),\n              tags$li(strong(\"Post-hoc outlier criterion change\"), \" - changing from 3 SD to 2.5 SD to get significance\"),\n              tags$li(strong(\"Adding non-preregistered covariates\"), \" - age wasn't pre-registered\"),\n              tags$li(strong(\"HARKing\"), \" - presenting depression as primary when it was secondary\")\n            ),\n            p(strong(\"Good practices you correctly identified as legitimate:\")),\n            tags$ul(\n              tags$li(\"Pre-registering the study ✓\"),\n              tags$li(\"Running pre-registered analyses ✓\"),\n              tags$li(\"Having pre-specified criteria ✓\")\n            ),\n            div(class = \"story-box\",\n                p(strong(\"Prof. Stapel:\"), \" \\\"Perfect! The key is whether decisions were made before or after seeing data. Pre-registration makes this transparent. That student violated their own pre-registration multiple times. Don't let this happen to you!\\\"\")\n            )\n        )\n      })\n    } else {\n      # Lose a life\n      game_state$lives <- game_state$lives - 1\n      \n      if (game_state$lives <= 0) {\n        game_state$game_over <- TRUE\n        game_state$current_room <- \"lobby\"\n      } else {\n        num_correct <- length(intersect(correct_qrps, identified))\n        num_false_positives <- length(setdiff(identified, correct_qrps))\n        \n        output$phack_feedback <- renderUI({\n          div(class = \"alert alert-danger\",\n              h4(sprintf(\"❌ Wrong! You lost a life. %d lives remaining.\", game_state$lives)),\n              if (num_false_positives > 0) {\n                p(sprintf(\"You identified %d QRPs correctly but also selected %d legitimate practice(s). Not all research decisions are questionable!\", num_correct, num_false_positives))\n              } else {\n                p(sprintf(\"You identified %d QRPs correctly. There are 5 total. Think about what was pre-specified vs. post-hoc.\", num_correct))\n              }\n          )\n        })\n      }\n    }\n  })\n  \n  observeEvent(input$hint_phack, {\n    if (game_state$hints_used < 3) {\n      game_state$hints_used <- game_state$hints_used + 1\n      showModal(modalDialog(\n        title = \"💡 Hint\",\n        \"Key question: was each decision made BEFORE or AFTER seeing data? Pre-registering = good. Running pre-registered analyses = good. Using pre-specified criteria = good. But deviating from pre-registration (stopping early, switching outcomes, changing criteria to get significance, adding unplanned analyses) = QRP. Look for 5 violations.\",\n        easyClose = TRUE,\n        footer = modalButton(\"Close\")\n      ))\n    } else {\n      showModal(modalDialog(\n        title = \"No Hints Left\",\n        \"You've used all 3 hints! Keep trying!\",\n        easyClose = TRUE,\n        footer = modalButton(\"Close\")\n      ))\n    }\n  })\n  \n  # PUZZLE 3: Power Analysis\n  power_analysis_ui <- function() {\n    tagList(\n      h3(\"📊 Challenge 3: Statistical Power and Sample Size\"),\n      \n      div(class = \"story-box\",\n          p(strong(\"Prof. Stapel's note:\"), \" \\\"Right, now for your own dissertation. Before the ethics committee will approve your study, you need to justify your sample size. This isn't just picking a number that 'sounds good' - you need a proper power analysis. Let's see if you can work this out...\\\"\")\n      ),\n      \n      p(\"For YOUR dissertation study comparing two groups of university students:\"),\n      hr(),\n      wellPanel(\n        h4(\"Your Study Parameters:\"),\n        tags$ul(\n          tags$li(\"Design: Between-subjects experiment (two independent groups, balanced design)\"),\n          tags$li(\"Allocation ratio: 1:1 (equal group sizes)\"),\n          tags$li(\"Expected effect size: Cohen's d = 0.5 (medium effect, based on previous literature)\"),\n          tags$li(\"Desired statistical power: 0.80 (80% - standard in psychology)\"),\n          tags$li(\"Significance level: α = 0.05 (two-tailed test)\"),\n          tags$li(\"Statistical test: Independent samples t-test\")\n        ),\n        p(em(\"Note: The ethics committee requires 80% power as minimum for approval.\"))\n      ),\n      p(strong(\"What is the minimum TOTAL sample size needed (both groups combined)?\")),\n      p(\"Remember: This is the number you'll need to justify in your ethics application.\"),\n      p(HTML('You can use an online power calculator or download <a href=\"https://www.psychologie.hhu.de/arbeitsgruppen/allgemeine-psychologie-und-arbeitspsychologie/gpower\" target=\"_blank\">G*Power<\/a> to calculate this.')),\n      numericInput(\"sample_size\", \"Total sample size (N):\", \n                   value = NA, min = 10, max = 500, step = 1),\n      hr(),\n      actionButton(\"check_power\", \"✅ Submit Sample Size\", class = \"btn-primary btn-lg\"),\n      actionButton(\"hint_power\", \"💡 Request Hint\", class = \"btn-info\"),\n      br(), br(),\n      uiOutput(\"power_feedback\")\n    )\n  }\n  \n  observeEvent(input$check_power, {\n    correct_answer <- 128\n    tolerance <- 6\n    \n    if (!is.na(input$sample_size) && \n        abs(input$sample_size - correct_answer) <= tolerance) {\n      game_state$puzzles$power_analysis$completed <- TRUE\n      \n      output$power_feedback <- renderUI({\n        div(class = \"alert alert-success\",\n            h4(\"✅ Correct!\"),\n            p(sprintf(\"For Cohen's d = 0.5 with 80%% power and α = 0.05, you need approximately %d participants total (64 per group).\", correct_answer)),\n            p(\"This ensures you have adequate power to detect the effect if it exists, avoiding Type II errors (false negatives).\"),\n            div(class = \"story-box\",\n                p(strong(\"Prof. Stapel:\"), \" \\\"Excellent! You can now justify this in your ethics application. Running an underpowered study would be unethical - you'd be wasting participants' time with little chance of detecting a real effect. Plus, the Research Ethics Committee would reject it immediately. Well done!\\\"\")\n            )\n        )\n      })\n    } else if (is.na(input$sample_size)) {\n      output$power_feedback <- renderUI({\n        div(class = \"alert alert-danger\",\n            \"Please enter a sample size.\"\n        )\n      })\n    } else {\n      game_state$lives <- game_state$lives - 1\n      \n      if (game_state$lives <= 0) {\n        game_state$game_over <- TRUE\n        game_state$current_room <- \"lobby\"\n      } else {\n        output$power_feedback <- renderUI({\n          div(class = \"alert alert-danger\",\n              h4(sprintf(\"❌ Wrong! You lost a life. %d lives remaining.\", game_state$lives)),\n              p(\"Remember: larger sample sizes are needed for smaller effects. For a medium effect with standard parameters, think about common sample sizes in psychology studies.\")\n          )\n        })\n      }\n    }\n  })\n  \n  observeEvent(input$hint_power, {\n    if (game_state$hints_used < 3) {\n      game_state$hints_used <- game_state$hints_used + 1\n      showModal(modalDialog(\n        title = \"💡 Hint\",\n        \"For Cohen's d = 0.5 (medium effect), 80% power, and α = 0.05, you need about 64 participants PER GROUP. Don't forget to add both groups together for the total N!\",\n        easyClose = TRUE,\n        footer = modalButton(\"Close\")\n      ))\n    } else {\n      showModal(modalDialog(\n        title = \"No Hints Left\",\n        \"You've used all 3 hints! Keep trying!\",\n        easyClose = TRUE,\n        footer = modalButton(\"Close\")\n      ))\n    }\n  })\n  \n  # PUZZLE 4: Open Data\n  open_data_ui <- function() {\n    tagList(\n      h3(\"📂 Challenge 4: FAIR Data Principles\"),\n      \n      div(class = \"story-box\",\n          p(strong(\"Prof. Stapel's note:\"), \" \\\"Nearly there! After you collect your data, you'll need to share it according to FAIR principles - that's Findable, Accessible, Interoperable, and Reusable. The BPS and most journals now require this. Let's test whether you can recognise properly shared data when you see it...\\\"\")\n      ),\n      \n      p(\"You're reviewing the data availability statements from five published papers. Which datasets meet FAIR principles and would be acceptable for YOUR dissertation?\"),\n      p(em(\"(Select ALL that meet FAIR standards)\")),\n      hr(),\n      checkboxGroupInput(\"fair_datasets\",\n                         label = NULL,\n                         choices = c(\n                           \"Dataset A: 'Data available on my personal university webpage' - Excel file, no codebook, no license specified\" = \"A\",\n                           \"Dataset B: Deposited on OSF with DOI, CSV format, detailed codebook with variable descriptions, CC-BY 4.0 license\" = \"B\",\n                           \"Dataset C: 'Summary statistics provided in supplementary materials (PDF)' - no raw data available\" = \"C\",\n                           \"Dataset D: Public GitHub repository, CSV files, documented R analysis script, data dictionary included, MIT license\" = \"D\",\n                           \"Dataset E: 'Data available upon reasonable request to corresponding author' - proprietary SPSS format, limited documentation\" = \"E\"\n                         )\n      ),\n      hr(),\n      actionButton(\"check_fair\", \"✅ Submit Selection\", class = \"btn-primary btn-lg\"),\n      actionButton(\"hint_fair\", \"💡 Request Hint\", class = \"btn-info\"),\n      br(), br(),\n      uiOutput(\"fair_feedback\")\n    )\n  }\n  \n  observeEvent(input$check_fair, {\n    correct_fair <- c(\"B\", \"D\")\n    selected <- input$fair_datasets\n    \n    all_correct <- length(setdiff(correct_fair, selected)) == 0 && \n      length(setdiff(selected, correct_fair)) == 0\n    \n    if (all_correct) {\n      game_state$puzzles$open_data$completed <- TRUE\n      \n      all_rooms_done <- game_state$puzzles$preregistration$completed &&\n        game_state$puzzles$p_hacking$completed &&\n        game_state$puzzles$power_analysis$completed &&\n        game_state$puzzles$open_data$completed\n      \n      output$fair_feedback <- renderUI({\n        div(class = \"alert alert-success\",\n            h4(\"✅ Perfect!\"),\n            p(\"Datasets B and D meet FAIR principles:\"),\n            tags$ul(\n              tags$li(strong(\"Findable:\"), \" Both have persistent identifiers (DOI/GitHub URL)\"),\n              tags$li(strong(\"Accessible:\"), \" Openly available on trusted repositories\"),\n              tags$li(strong(\"Interoperable:\"), \" Standard, open formats (CSV, R scripts)\"),\n              tags$li(strong(\"Reusable:\"), \" Clear licenses and comprehensive documentation\")\n            ),\n            div(class = \"story-box\",\n                p(strong(\"Prof. Stapel:\"), \" \\\"Excellent! For your dissertation, you'll use OSF with a DOI, CSV format, a proper codebook, and a CC-BY license. Now... there's one more thing before the final challenge. It's time to learn from history's mistakes...\\\"\")\n            )\n        )\n      })\n    } else {\n      game_state$lives <- game_state$lives - 1\n      \n      if (game_state$lives <= 0) {\n        game_state$game_over <- TRUE\n        game_state$current_room <- \"lobby\"\n      } else {\n        output$fair_feedback <- renderUI({\n          div(class = \"alert alert-danger\",\n              h4(sprintf(\"❌ Wrong! You lost a life. %d lives remaining.\", game_state$lives)),\n              p(\"Think about: persistent identifiers, open repositories, standard formats, clear licenses, and comprehensive documentation.\")\n          )\n        })\n      }\n    }\n  })\n  \n  observeEvent(input$hint_fair, {\n    if (game_state$hints_used < 3) {\n      game_state$hints_used <- game_state$hints_used + 1\n      showModal(modalDialog(\n        title = \"💡 Hint\",\n        \"FAIR data should be: on a trusted repository (not personal websites), have a persistent identifier (DOI), use open formats (CSV not Excel), have clear documentation, and have an open license. Two datasets meet all these criteria.\",\n        easyClose = TRUE,\n        footer = modalButton(\"Close\")\n      ))\n    } else {\n      showModal(modalDialog(\n        title = \"No Hints Left\",\n        \"You've used all 3 hints! Keep trying!\",\n        easyClose = TRUE,\n        footer = modalButton(\"Close\")\n      ))\n    }\n  })\n  \n  # PUZZLE 5: Fraudster Hall of Fame\n  fraudster_hall_ui <- function() {\n    tagList(\n      h3(\"🕵️ Challenge 5: Hall of Fame\"),\n      \n      div(class = \"story-box\",\n          p(strong(\"Prof. Stapel:\"), \" \\\"Before we get to the final challenge, you need to understand the history of research misconduct in psychology. Some researchers have committed fraud, fabricated data, or engaged in serious misconduct. Others have been champions of open science and integrity. You need to know the difference.\\\"\"),\n          p(strong(\"Your task:\"), \" Research these eight individuals and categorize them correctly. Use resources like \", \n            tags$a(href = \"https://retractionwatch.com\", target = \"_blank\", \"RetractionWatch.com\"), \n            \" and Google to investigate their backgrounds. Who committed research fraud, and who has been fighting for research integrity?\")\n      ),\n      \n      p(strong(\"Instructions:\"), \" For each person below, select whether they are known for research fraud/misconduct OR for advocating open science:\"),\n      \n      hr(),\n      \n      fluidRow(\n        column(6,\n               wellPanel(\n                 h4(\"👤 Researchers to Categorize:\"),\n                 \n                 div(style = \"margin: 15px 0;\",\n                     strong(\"1. Francesca Gino\"),\n                     radioButtons(\"cat_gino\", NULL, \n                                  choices = c(\"Select category...\" = \"\", \n                                              \"Research Fraud/Misconduct\" = \"fraud\",\n                                              \"Open Science Advocate\" = \"advocate\"),\n                                  selected = \"\")\n                 ),\n                 \n                 div(style = \"margin: 15px 0;\",\n                     strong(\"2. Dorothy Bishop\"),\n                     radioButtons(\"cat_bishop\", NULL,\n                                  choices = c(\"Select category...\" = \"\",\n                                              \"Research Fraud/Misconduct\" = \"fraud\",\n                                              \"Open Science Advocate\" = \"advocate\"),\n                                  selected = \"\")\n                 ),\n                 \n                 div(style = \"margin: 15px 0;\",\n                     strong(\"3. Brian Wansink\"),\n                     radioButtons(\"cat_wansink\", NULL,\n                                  choices = c(\"Select category...\" = \"\",\n                                              \"Research Fraud/Misconduct\" = \"fraud\",\n                                              \"Open Science Advocate\" = \"advocate\"),\n                                  selected = \"\")\n                 ),\n                 \n                 div(style = \"margin: 15px 0;\",\n                     strong(\"4. Daniel Lakens\"),\n                     radioButtons(\"cat_lakens\", NULL,\n                                  choices = c(\"Select category...\" = \"\",\n                                              \"Research Fraud/Misconduct\" = \"fraud\",\n                                              \"Open Science Advocate\" = \"advocate\"),\n                                  selected = \"\")\n                 )\n               )\n        ),\n        \n        column(6,\n               wellPanel(\n                 h4(\"👤 More Researchers:\"),\n                 \n                 div(style = \"margin: 15px 0;\",\n                     strong(\"5. Diederik Stapel\"),\n                     radioButtons(\"cat_stapel\", NULL,\n                                  choices = c(\"Select category...\" = \"\",\n                                              \"Research Fraud/Misconduct\" = \"fraud\",\n                                              \"Open Science Advocate\" = \"advocate\"),\n                                  selected = \"\")\n                 ),\n                 \n                 div(style = \"margin: 15px 0;\",\n                     strong(\"6. Brian Nosek\"),\n                     radioButtons(\"cat_nosek\", NULL,\n                                  choices = c(\"Select category...\" = \"\",\n                                              \"Research Fraud/Misconduct\" = \"fraud\",\n                                              \"Open Science Advocate\" = \"advocate\"),\n                                  selected = \"\")\n                 ),\n                 \n                 div(style = \"margin: 15px 0;\",\n                     strong(\"7. Hans Eysenck\"),\n                     radioButtons(\"cat_eysenck\", NULL,\n                                  choices = c(\"Select category...\" = \"\",\n                                              \"Research Fraud/Misconduct\" = \"fraud\",\n                                              \"Open Science Advocate\" = \"advocate\"),\n                                  selected = \"\")\n                 ),\n                 \n                 div(style = \"margin: 15px 0;\",\n                     strong(\"8. Katie Corker\"),\n                     radioButtons(\"cat_corker\", NULL,\n                                  choices = c(\"Select category...\" = \"\",\n                                              \"Research Fraud/Misconduct\" = \"fraud\",\n                                              \"Open Science Advocate\" = \"advocate\"),\n                                  selected = \"\")\n                 )\n               )\n        )\n      ),\n      \n      hr(),\n      \n      actionButton(\"check_fraudsters\", \"✅ Submit Categorization\", class = \"btn-primary btn-lg\"),\n      actionButton(\"hint_fraudsters\", \"💡 Request Hint\", class = \"btn-info\"),\n      br(), br(),\n      uiOutput(\"fraudster_feedback\")\n    )\n  }\n  \n  observeEvent(input$check_fraudsters, {\n    # Correct categorizations\n    correct <- list(\n      cat_gino = \"fraud\",      # Francesca Gino - Harvard fraud case\n      cat_bishop = \"advocate\",  # Dorothy Bishop - open science advocate\n      cat_wansink = \"fraud\",    # Brian Wansink - Cornell food research scandal\n      cat_lakens = \"advocate\",  # Daniel Lakens - open science educator\n      cat_stapel = \"fraud\",     # Diederik Stapel - major fabrication case\n      cat_nosek = \"advocate\",   # Brian Nosek - founder of Center for Open Science\n      cat_eysenck = \"fraud\",    # Hans Eysenck - posthumous fraud findings\n      cat_corker = \"advocate\"   # Katie Corker - open science researcher\n    )\n    \n    # Check answers\n    answers <- list(\n      cat_gino = input$cat_gino,\n      cat_bishop = input$cat_bishop,\n      cat_wansink = input$cat_wansink,\n      cat_lakens = input$cat_lakens,\n      cat_stapel = input$cat_stapel,\n      cat_nosek = input$cat_nosek,\n      cat_eysenck = input$cat_eysenck,\n      cat_corker = input$cat_corker\n    )\n    \n    # Check if all are answered\n    all_answered <- all(sapply(answers, function(x) x != \"\"))\n    \n    if (!all_answered) {\n      output$fraudster_feedback <- renderUI({\n        div(class = \"alert alert-warning\",\n            \"Please categorize all 8 researchers before submitting.\"\n        )\n      })\n      return()\n    }\n    \n    # Check if all correct\n    all_correct <- all(mapply(function(ans, cor) ans == cor, answers, correct))\n    \n    if (all_correct) {\n      game_state$puzzles$fraudster_hall$completed <- TRUE\n      \n      output$fraudster_feedback <- renderUI({\n        div(class = \"alert alert-success\",\n            h4(\"✅ Perfect! You've learned from history.\"),\n            \n            p(strong(\"Research Fraud Cases:\")),\n            tags$ul(\n              tags$li(strong(\"Francesca Gino\"), \" - Harvard Business School professor with multiple retractions for data manipulation\"),\n              tags$li(strong(\"Brian Wansink\"), \" - Cornell food researcher resigned after widespread p-hacking and data errors\"),\n              tags$li(strong(\"Diederik Stapel\"), \" - Dutch social psychologist fabricated data in 50+ papers\"),\n              tags$li(strong(\"Hans Eysenck\"), \" - Posthumous investigations found serious concerns about data integrity in cancer research\")\n            ),\n            \n            p(strong(\"Open Science Champions:\")),\n            tags$ul(\n              tags$li(strong(\"Dorothy Bishop\"), \" - Oxford professor, advocate for replication and transparency\"),\n              tags$li(strong(\"Daniel Lakens\"), \" - Eindhoven professor, educator on open science practices\"),\n              tags$li(strong(\"Brian Nosek\"), \" - Founded Center for Open Science, led Reproducibility Project\"),\n              tags$li(strong(\"Katie Corker\"), \" - Grand Valley State professor, open science researcher and advocate\")\n            ),\n            \n            div(class = \"story-box\",\n                p(strong(\"Prof. Stapel:\"), \" \\\"Yes, I share a surname with one of psychology's most infamous fraudsters. That's precisely why I'm so passionate about teaching you to do better. These cases show what happens when researchers prioritize career advancement over integrity. The open science movement emerged partly in response to these scandals. Now, one final challenge awaits...\\\"\")\n            )\n        )\n      })\n    } else {\n      # Lose a life\n      game_state$lives <- game_state$lives - 1\n      \n      if (game_state$lives <= 0) {\n        game_state$game_over <- TRUE\n        game_state$current_room <- \"lobby\"\n      } else {\n        num_correct <- sum(mapply(function(ans, cor) ans == cor, answers, correct))\n        \n        output$fraudster_feedback <- renderUI({\n          div(class = \"alert alert-danger\",\n              h4(sprintf(\"❌ Wrong! You lost a life. %d lives remaining.\", game_state$lives)),\n              p(sprintf(\"You got %d out of 8 correct. Research these individuals more carefully using RetractionWatch.com and Google. Look for publication retractions and fraud investigations.\", num_correct))\n          )\n        })\n      }\n    }\n  })\n  \n  observeEvent(input$hint_fraudsters, {\n    if (game_state$hints_used < 3) {\n      game_state$hints_used <- game_state$hints_used + 1\n      showModal(modalDialog(\n        title = \"💡 Hint\",\n        HTML(\"Search '<strong>RetractionWatch + [researcher name]<\/strong>' to find fraud cases. For open science advocates, search '<strong>[name] + open science<\/strong>' or '<strong>Center for Open Science<\/strong>'. The fraudsters have dozens of retracted papers. The advocates have founded organizations and written extensively about transparency.\"),\n        easyClose = TRUE,\n        footer = modalButton(\"Close\")\n      ))\n    } else {\n      showModal(modalDialog(\n        title = \"No Hints Left\",\n        \"You've used all 3 hints! Keep trying!\",\n        easyClose = TRUE,\n        footer = modalButton(\"Close\")\n      ))\n    }\n  })\n  \n  # PUZZLE 6: Final Challenge\n  final_challenge_ui <- function() {\n    tagList(\n      h3(\"🎯 Final Challenge: Research Integrity in Your Literature Review\"),\n      \n      div(class = \"story-box\",\n          p(strong(\"Prof. Stapel's note:\"), \" \\\"Last challenge! This tests whether you understand your responsibilities as a researcher. You've learned about preventing problems through preregistration, power analysis, and open data. But what if you discover problems in published work during your literature review? This is about scientific integrity and your duty to the field...\\\"\")\n      ),\n      \n      wellPanel(\n        h4(\"The Scenario:\"),\n        p(\"During your literature review, you discover a highly-cited 2019 paper that directly relates to your dissertation topic. However, several red flags emerge:\"),\n        tags$ul(\n          tags$li(\"The paper claims a very large effect (Cohen's d = 1.2) from only n=30 participants\"),\n          tags$li(\"Data and materials listed as 'available upon request', but the author doesn't respond to emails\"),\n          tags$li(\"The study wasn't preregistered (though this wasn't mandatory in 2019)\"),\n          tags$li(\"You find a 2023 preregistered replication study (n=500) that found d=0.1, p=.40 - essentially no effect\")\n        ),\n        p(strong(\"Your task:\"), \" How should you handle this in YOUR dissertation literature review and methodology?\")\n      ),\n      \n      p(strong(\"Select the BEST approach:\")),\n      \n      radioButtons(\"final_approach\", NULL,\n                   choices = c(\n                     \"A: Cite only the original 2019 study since it's more established and highly-cited\" = \"A\",\n                     \"B: Cite only the 2023 replication since it used better methodology\" = \"B\",\n                     \"C: Cite both studies, acknowledge the failed replication, and explain why you're basing your expectations on the replication findings\" = \"C\",\n                     \"D: Exclude both studies from your review since the findings are contradictory\" = \"D\",\n                     \"E: Average the effect sizes from both studies for your power analysis\" = \"E\"\n                   ),\n                   selected = character(0)),\n      \n      hr(),\n      actionButton(\"check_final\", \"✅ Submit Final Answer\", class = \"btn-primary btn-lg\"),\n      br(), br(),\n      uiOutput(\"final_feedback\")\n    )\n  }\n  \n  observeEvent(input$check_final, {\n    if (input$final_approach == \"\") {\n      output$final_feedback <- renderUI({\n        div(class = \"alert alert-warning\",\n            \"Please select an approach before submitting.\"\n        )\n      })\n      return()\n    }\n    \n    if (input$final_approach == \"C\") {\n      elapsed <- as.numeric(Sys.time()) - game_state$start_time\n      mins <- floor(elapsed / 60)\n      secs <- floor(elapsed %% 60)\n      \n      output$final_feedback <- renderUI({\n        div(class = \"alert alert-success\",\n            h4(\"🎉 CONGRATULATIONS! YOU'VE PASSED! 🎉\"),\n            \n            div(class = \"email-box\",\n                div(class = \"email-header\",\n                    strong(\"From:\"), \" Prof. Brian Stapel\", br(),\n                    strong(\"To:\"), \" You\", br(),\n                    strong(\"Subject:\"), \" RE: Ethics Application - APPROVED\", br(),\n                    strong(\"Time:\"), sprintf(\" Completed in %d:%02d (under 15 minutes!)\", mins, secs)\n                ),\n                p(\"Dear Student,\"),\n                p(\"Excellent work! You've demonstrated a solid understanding of open science principles. Your ethics application is now APPROVED.\"),\n                p(strong(\"Your performance:\")),\n                tags$ul(\n                  tags$li(sprintf(\"Completion time: %d minutes %d seconds\", mins, secs)),\n                  tags$li(sprintf(\"Hints used: %d/3\", game_state$hints_used)),\n                  tags$li(sprintf(\"Lives remaining: %d/3\", game_state$lives)),\n                  tags$li(\"Open science readiness: ✅ READY\")\n                ),\n                p(strong(\"What you've mastered:\")),\n                tags$ul(\n                  tags$li(\"✅ Preregistration platforms and practices\"),\n                  tags$li(\"✅ Distinguishing QRPs from legitimate research decisions\"),\n                  tags$li(\"✅ Statistical power and sample size justification\"),\n                  tags$li(\"✅ FAIR data principles and open sharing\"),\n                  tags$li(\"✅ Recognizing research fraud vs. open science advocacy\"),\n                  tags$li(\"✅ Research integrity and handling failed replications\")\n                ),\n                p(\"Research integrity means transparent reporting of the evidence - including contradictory findings. You correctly identified that you should cite both the original study and the replication, discuss why the replication used more rigorous methods (preregistration, larger sample), and base your hypotheses and power analysis on the replication findings.\"),\n                p(\"This shows you understand that 'as-open-as-possible' science means acknowledging when influential findings don't replicate. You're now ready to conduct your dissertation research ethically and transparently. These principles will serve you well throughout your career in psychology - whether in research, clinical practice, or applied settings.\"),\n                p(\"Good luck with your data collection! See you at our next supervision meeting.\"),\n                p(\"Best wishes,\", br(), \"Prof. Stapel\", br(), em(\"Dissertation Supervisor\"))\n            ),\n            \n            hr(),\n            p(strong(\"Well done! You're ready for ethical, open research! 🏆\")),\n            br(),\n            actionButton(\"reset_game\", \"🔄 Help Another Student (Play Again)\", class = \"btn-primary\")\n        )\n      })\n      game_state$puzzles$final_challenge$completed <- TRUE\n    } else {\n      game_state$lives <- game_state$lives - 1\n      \n      if (game_state$lives <= 0) {\n        game_state$game_over <- TRUE\n        game_state$current_room <- \"lobby\"\n      } else {\n        feedback_text <- switch(input$final_approach,\n                                \"A\" = \"Ignoring the replication is not transparent. You must acknowledge contradictory evidence.\",\n                                \"B\" = \"While the replication is more rigorous, you should cite both studies to give a complete picture of the evidence.\",\n                                \"D\" = \"Excluding contradictory findings is not transparent. Address them openly in your review.\",\n                                \"E\" = \"Averaging contradictory results is misleading. Base your expectations on the more rigorous study.\",\n                                \"Not quite right. Think about transparency and basing decisions on the best available evidence.\"\n        )\n        \n        output$final_feedback <- renderUI({\n          div(class = \"alert alert-danger\",\n              h4(sprintf(\"❌ Wrong! You lost a life. %d lives remaining.\", game_state$lives)),\n              p(feedback_text),\n              p(\"Remember: Research integrity requires transparent reporting of ALL relevant evidence, including failed replications. Base your methodology on the most rigorous available evidence.\")\n          )\n        })\n      }\n    }\n  })\n  \n  # Reset game function\n  reset_game_logic <- function() {\n    game_state$start_time <- as.numeric(Sys.time())\n    game_state$time_limit <- 15 * 60\n    game_state$current_room <- \"lobby\"\n    game_state$hints_used <- 0\n    game_state$lives <- 3\n    game_state$game_over <- FALSE\n    game_state$puzzles <- list(\n      preregistration = list(unlocked = TRUE, completed = FALSE, name = \"Challenge 1: Preregistration\"),\n      p_hacking = list(unlocked = FALSE, completed = FALSE, name = \"Challenge 2: QRPs\"),\n      power_analysis = list(unlocked = FALSE, completed = FALSE, name = \"Challenge 3: Power Analysis\"),\n      open_data = list(unlocked = FALSE, completed = FALSE, name = \"Challenge 4: FAIR Data\"),\n      fraudster_hall = list(unlocked = FALSE, completed = FALSE, name = \"Challenge 5: Fraudster Hall of Fame\"),\n      final_challenge = list(unlocked = FALSE, completed = FALSE, name = \"Final Challenge\")\n    )\n    \n    updateSelectInput(session, \"match1\", selected = \"\")\n    updateSelectInput(session, \"match2\", selected = \"\")\n    updateSelectInput(session, \"match3\", selected = \"\")\n    updateSelectInput(session, \"match4\", selected = \"\")\n    updateCheckboxGroupInput(session, \"qrp_identified\", selected = character(0))\n    updateNumericInput(session, \"qrp_count\", value = 0)\n    updateNumericInput(session, \"sample_size\", value = NA)\n    updateCheckboxGroupInput(session, \"fair_datasets\", selected = character(0))\n    \n    # Reset fraudster hall inputs\n    updateRadioButtons(session, \"cat_gino\", selected = \"\")\n    updateRadioButtons(session, \"cat_bishop\", selected = \"\")\n    updateRadioButtons(session, \"cat_wansink\", selected = \"\")\n    updateRadioButtons(session, \"cat_lakens\", selected = \"\")\n    updateRadioButtons(session, \"cat_stapel\", selected = \"\")\n    updateRadioButtons(session, \"cat_nosek\", selected = \"\")\n    updateRadioButtons(session, \"cat_eysenck\", selected = \"\")\n    updateRadioButtons(session, \"cat_corker\", selected = \"\")\n    \n    updateSelectInput(session, \"action1\", selected = \"\")\n    updateSelectInput(session, \"action2\", selected = \"\")\n    updateSelectInput(session, \"action3\", selected = \"\")\n    updateSelectInput(session, \"action4\", selected = \"\")\n    updateSelectInput(session, \"action5\", selected = \"\")\n  }\n  \n  observeEvent(input$reset_game, {\n    reset_game_logic()\n  })\n  \n  observeEvent(input$reset_game_btn, {\n    reset_game_logic()\n  })\n  \n  observeEvent(input$reset_game_after_loss, {\n    reset_game_logic()\n  })\n}\n\n# Run the app\nshinyApp(ui = ui, server = server)","type":"text"}]
